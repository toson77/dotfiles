# basic configuration
# use 256color
set-option -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',xterm-256color:RGB'
# ESC delay fix
set -s escape-time 0
# status line update interval is 1
set-option -g status-interval 1
# start index 1
set -g base-index 1
# start pane index  1
setw -g pane-base-index 1
# give neovim focus-events
set-option -g focus-events on
# change active pane white
setw -g window-style 'bg=#3f4551'
setw -g window-active-style 'bg=#282c34'
# change key bindings
# change prefix
set -g prefix C-a
# horizontal devision
bind - split-window -v
# vertical devision
bind | split-window -h
# move pain vim bind
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# copymode using vim bind
setw -g mode-keys vi
# start selection by v
bind -T copy-mode-vi v send -X begin-selection
# toggle parallel excution
bind e setw synchronize-panes \; display "synchronize-panes #{?pane_synchronized,on,off}"
# setting status line
# centor window-status
set-option -g status-justify "centre"
# background color of status line
set-option -g status-bg "colour238"
# background color of char
set-option -g status-fg "colour255"
# max length of status-left
set-option -g status-left-length 10
# format of window-left
set-option -g status-left "#[fg=colour255,bg=colour241,bold]Session: #S #[default]"
# format of window-status
set-window-option -g window-status-format " #I: #W "
# format of current window-status
set-window-option -g window-status-current-format "#[fg=colour255,bg=colour241,bold] #I: #W #[default]"
# max length of status-right
set-option -g status-right-length 120
# status line at the top
set-option -g status-position top
# Time  view
set-option -g status-right "#[fg=colour255,bg=colour241,bold]| %x（%a）%T #[default]"
# operation
# mouse enable
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
# change command mode selection method to vim
set-window-option -g mode-keys vi
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
# enable clipboard (WSL)
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "win32yank.exe -i"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "win32yank.exe -i"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "win32yank.exe -i"
unbind-key -T prefix v
bind-key v run "win32yank.exe -o | tmux load-buffer - && tmux paste-buffer"
